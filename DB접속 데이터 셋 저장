import pandas as pd
import pymysql
from sqlalchemy import create_engine

# 변경사항
inId = "kopo"
inPw = "kopo"
inIp = "192.168.110.111"
inPort = "3306"
inDbName = "kopo"

engine = create_engine('mysql+pymysql://{}:{}@{}:{}/{}'.format(inId,inPw,inIp,inPort,inDbName))
# ... DB에 따라 변경
# mariaDB = mysql+pymysql
# postgres = postgresql
# oralce = oracle+cx_oracle

inData = pd.read_csv("../dataset/customerdata.csv") # 가져올 데이터에 따라 다르다
inData.head()

lastData = pd.DataFrame(inData)
lastData

tableName = "JIKGB_TEST"
# 변경하면서 사용
tableName = tableName.lower()
# 변경하면서 사용
#### 문자컬럼에 대해서 varchar (100) 적용 _ 사용시 속도 SpeedUp 50배 
objectColumns = list(testData.columns[testData.dtypes == 'object'])
typeDict={}
maxLen = 100

for i in range(0, len(objectColumns)):
    # sawonData[i].str.len().max() 최대치 사용할 경우
    typeDict[ objectColumns[i] ] = types.VARCHAR(100)
#### 문자컬럼에 대해서 varchar (100) 적용 _ 사용시 속도 SpeedUp 50배 

testData.to_sql(name=tableName, if_exists="replace", con=engine,dtype=typeDict, index=False)
# 변경하면서 사용

read = pd.read_sql_query('SELECT * FROM TABS', engine) # DB에 따라 바뀌는 부분
read.head()

read = pd.read_sql_query('SELECT * FROM customer_백승수', engine) # FROM절 이후 내가 저장한 파일명에 따라 변경
read.head()
