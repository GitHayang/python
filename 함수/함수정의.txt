#generateGenesisBlock
타임스탬프 생성
타임해쉬 : 0번 인덱스, 타임 스탬프, 제네시스 블록 문자열, 해쉬, 0 생성
첫번째 블록을 생성해서 반환


#calculateHash
파라미터 : 인덱스, 이전 해쉬, 타임스탬프, 데이터, 작업증명
value : 파라미터들
sha : value를 해쉬생성
생성된 해쉬를 반환


#calculateHashForBlock
파라미터 : 위에서 생성된 block클래스
calculateHash함수에서 만들어진 해쉬를 반환한다.


#getLatestBlock
파라미터 : 하단의 mineNewBlock에서 생성된다
마지막 블록체인을 반환


#generateNextBlock
파라미터 : blockchain, blockData, timestamp, proof
previousBlock : getLatestBlock의 값
nextIndex : previousBlock의 인덱스 + 1
nextTimestamp :  타임스탬프
nextHash : #calculateHash를 통해 만들어진 해쉬


#writeBlockchain
파라미터 : blockchain
빈blockchainList선언

blockList : 블록 인덱스, 블록의 이전 해쉬, 블록 타임스탬프, 현블록의 해쉬, 블록의 증명
blockchainList에 blockList를 append

try:
blockchain.csv를 읽기로 불러온다
blcokReader : csv파일을 읽는다.
last_line_number : blockchain.csv의 행을 계산
blcokReader의 line_num이 last_line_number과 같을때
lastblock생성

마지막 블록 인덱스 +1 != blockchainList의 마지막의 처음부분이 같지 않을때
index sequence mismatch 출력
여기서 마지막 블록인덱스가 blockchainList의 마지막의 처음부분이 같을때
db(csv) has already been updated 출력

except:
file open error in check current db(csv) \n or maybe there's some other reason 출력


openFile = False
while not openFile (=True상태)
if : blockchainList가 비지 않았을 경우
try:
lock.acquire() : 다른 프로세스와의 상호작용 제어 
blockchain.csv를 쓰기로 불러오기
blockchainList에 있는 정보를 쓴다
blockchainList를 비운다
write ok 출력
openFile = True로 변환
updateTx(block) 함수
'Blockchain written to blockchain.csv.'
'Broadcasting new block to other nodes'
2줄 출력
broadcastNewBlock(blockchain) 함수
lock.release() : 제어 해제

except:
3초후 시작
writeBlockchain file open error 출력
lock.release() : 제어 해제
else :
Blockchain is empty출력